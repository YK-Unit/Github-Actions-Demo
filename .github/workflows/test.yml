# This is a basic workflow to help you get started with Actions

name: Test CI/CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
        
    # from: https://github.com/actions/starter-workflows/issues/68#issuecomment-592997170
    - name: Generate Env Variable
      run: |     
       git log --pretty=format:"GitHub Actions Auto Builder at $(date -u +'%Y-%m-d %H:%M:%S') %n%nLatest Commit %H%n%n    %s%n%n    %b" --date=short -n 1 > commit_msg.log
       cat commit_msg.log
       COMMIT_MSG_TEMP=$(cat commit_msg.log)
       export COMMIT_MSG_TEMP
       echo "::set-env name=COMMIT_MSG::$COMMIT_MSG_TEMP"
       echo "COMMIT_MSG: ${{ env.COMMIT_MSG }}"
       
       export APP_NAME_TEMP="Github-Actions-Demo_release_$(date +'%Y-%m-%d')"
       echo "::set-env name=APP_NAME::$APP_NAME_TEMP"
       echo "APP_NAME: ${{ env.APP_NAME }}"
       
       export SITE_UPDATED_LOG_TEMP="(GithubActions) Site updated at $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
       echo "::set-env name=SITE_UPDATED_LOG::$SITE_UPDATED_LOG_TEMP"
       echo "SITE_UPDATED_LOG: ${{ env.SITE_UPDATED_LOG }}"
       echo ""
       echo "实践证明，刚刚手动设置生成的环境变量在当前不可用，需要到next-step才能用"
       
    - name: How To Use Env Variable 
      run: |
        echo "Two way to use the Env Variable"
        echo ""
        echo "-------- Way 1: ${{ env.APP_NAME }} --------"
        echo "Env COMMIT_MSG: ${{ env.COMMIT_MSG }}"
        echo "Env APP_NAME: ${{ env.APP_NAME }}"
        echo "Env SITE_UPDATED_LOG: ${SITE_UPDATED_LOG}"
        echo ""
        echo "-------- Way 2: ${APP_NAME} --------"
        echo "Env COMMIT_MSG: ${COMMIT_MSG}"
        echo "Env APP_NAME: ${APP_NAME}"
        echo "Env SITE_UPDATED_LOG: ${SITE_UPDATED_LOG}"
      
    - name: Test Env Variable as input parameter 1
      uses: wxdlong/hello-action@v7
      with:
        who-to-greet: ${{ env.COMMIT_MSG }}  
   
    - name: Test Env Variable as input parameter 2
      uses: wxdlong/hello-action@v7
      with:
        who-to-greet: ${{ env.APP_NAME }} ${{ env.SITE_UPDATED_LOG }} 

    - name: Test Step Env Variable
      env:
        key_1: ${{ secrets.KEY_1 }}
        key_2: "Hi~"
        app_name: ${{ env.APP_NAME }}
      run: |
        echo "Env key_1: ${key_1}"
        echo "Secrets key_1: ${{ secrets.KEY_1 }}"

        echo "Env key_2: ${key_2}"
        
        echo "Env APP_NAME: ${{ env.APP_NAME }}"
        echo "Env app_name: ${app_name}"

